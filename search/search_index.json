{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to my website","text":"<p>Hey, I'm Maxi Sioux, @maxisioux on GitHub and other platforms. I develop open-source software, primarily Python tools and libraries. I do this full time: I earn my keep through sponsorship from individual users and companies, which is what makes these projects sustainable and gives you a chance to use them.</p> <p>Below is the list of all my blog posts.</p>"},{"location":"about/about/","title":"1 Topic1","text":""},{"location":"about/about/#11-topic","title":"1.1 Topic","text":""},{"location":"about/about/#12-topic","title":"1.2 Topic","text":""},{"location":"about/about/#2-topic","title":"2 Topic","text":""},{"location":"about/about/#21-topic","title":"2.1 Topic","text":""},{"location":"about/about/#211-topic","title":"2.1.1 Topic","text":"<ul> <li>list1</li> <li>list2</li> </ul>"},{"location":"about/license/","title":"License","text":"<p>Copyright (c) 2024 Sioux</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>"},{"location":"about/release-notes/","title":"1 Topic","text":""},{"location":"about/release-notes/#11-topic","title":"1.1 Topic","text":""},{"location":"about/release-notes/#12-topic","title":"1.2 Topic","text":""},{"location":"about/release-notes/#2-topic","title":"2 Topic","text":""},{"location":"about/release-notes/#21-topic","title":"2.1 Topic","text":""},{"location":"about/release-notes/#211-topic","title":"2.1.1 Topic","text":"<ul> <li>list1</li> <li>list2</li> </ul>"},{"location":"notes/","title":"All","text":"<p>{! notes/cpp/index.md !}</p> <p>{! notes/python/index.md !}</p>"},{"location":"notes/cpp/","title":"C++ Notes","text":"<ul> <li>Notes1</li> <li>Notes2</li> </ul>"},{"location":"notes/cpp/start/","title":"C++ Started","text":"<ul> <li> <p>step 1</p> </li> <li> <p>step 2</p> </li> </ul>"},{"location":"notes/markdown/started/","title":"How to add Alembic migrations to an existing FastAPI + Ormar project","text":"<p>This is a summary information, ah ah ah ah</p>"},{"location":"notes/markdown/started/#topic1","title":"Topic1","text":"<p>tip2 this is a note that xxxxxx</p> <p>Learn more</p> <p>See the documentation on supported types.</p> <p>Changed in version 0.15.</p> <p> Linking to any Markdown heading used to be the default, but now opt-in is required.</p> <p>Resources on YAML.</p> <p> YAML can sometimes be a bit tricky, particularly on indentation. Here are some resources that other users found useful to better understand YAML's peculiarities.</p> <ul> <li>YAML idiosyncrasies</li> <li>YAML multiline</li> </ul> <p>Warning</p> <p>Since mkdocstrings 0.19, the YAML <code>rendering</code> key is merged into the <code>options</code> key.</p>"},{"location":"notes/markdown/started/#mkdocstrings-usage","title":"mkdocstrings usage","text":"Performance Example - Pydantic vs. dedicated code <p>(This example requires Python 3.9+)</p> <pre><code>from typing import Annotated, Dict, List, Literal, Tuple\n\nfrom annotated_types import Gt\n\nfrom pydantic import BaseModel\n\n\nclass Fruit(BaseModel):\n    name: str  # (1)!\n    color: Literal[\"red\", \"green\"]  # (2)!\n    weight: Annotated[float, Gt(0)]  # (3)!\n    bazam: Dict[str, List[Tuple[int, bool, float]]]  # (4)!\n\n\nprint(\n    Fruit(\n        name=\"Apple\",\n        color=\"red\",\n        weight=4.2,\n        bazam={\"foobar\": [(1, True, 0.1)]},\n    )\n)\n# &gt; name='Apple' color='red' weight=4.2 bazam={'foobar': [(1, True, 0.1)]}\n</code></pre> Performance Example - Pydantic vs. dedicated code <p>In general, dedicated code should be much faster that a general-purpose validator, but in this example Pydantic is &gt;300% faster than dedicated code when parsing JSON and validating URLs.</p> <pre><code>import json\nimport timeit\nfrom urllib.parse import urlparse\n\nimport requests\n\nfrom pydantic import HttpUrl, TypeAdapter\n\nreps = 7\nnumber = 100\nr = requests.get(\"https://api.github.com/emojis\")\nr.raise_for_status()\nemojis_json = r.content\n\n\ndef emojis_pure_python(raw_data):\n    data = json.loads(raw_data)\n    output = {}\n    for key, value in data.items():\n        assert isinstance(key, str)\n        url = urlparse(value)\n        assert url.scheme in (\"https\", \"http\")\n        output[key] = url\n\n\nemojis_pure_python_times = timeit.repeat(\n    \"emojis_pure_python(emojis_json)\",\n    globals={\n        \"emojis_pure_python\": emojis_pure_python,\n        \"emojis_json\": emojis_json,\n    },\n    repeat=reps,\n    number=number,\n)\nprint(f\"pure python: {min(emojis_pure_python_times) / number * 1000:0.2f}ms\")\n# &gt; pure python: 5.32ms\n\ntype_adapter = TypeAdapter(dict[str, HttpUrl])\nemojis_pydantic_times = timeit.repeat(\n    \"type_adapter.validate_json(emojis_json)\",\n    globals={\n        \"type_adapter\": type_adapter,\n        \"HttpUrl\": HttpUrl,\n        \"emojis_json\": emojis_json,\n    },\n    repeat=reps,\n    number=number,\n)\nprint(f\"pydantic: {min(emojis_pydantic_times) / number * 1000:0.2f}ms\")\n# &gt; pydantic: 1.54ms\n\nprint(\n    f\"Pydantic {min(emojis_pure_python_times) / min(emojis_pydantic_times):0.2f}x faster\"\n)\n# &gt; Pydantic 3.45x faster\n</code></pre> <p>Example with the Python handler</p> <p>A comments here if you need.</p> docs/my_page.mdmkdocs.ymlsrc/my_package/my_module.pyResult <pre><code># Documentation for `MyClass`\n\n::: my_package.my_module.MyClass\n    handler: python\n    options:\n      members:\n        - method_a\n        - method_b\n      show_root_heading: false\n      show_source: false\n</code></pre> <pre><code>nav:\n  - \"My page\": my_page.md\n</code></pre> <pre><code>class MyClass:\n    \"\"\"Print print print!\"\"\"\n\n    def method_a(self):\n        \"\"\"Print A!\"\"\"\n        print(\"A!\")\n\n    def method_b(self):\n        \"\"\"Print B!\"\"\"\n        print(\"B!\")\n\n    def method_c(self):\n        \"\"\"Print C!\"\"\"\n        print(\"C!\")\n</code></pre> <p></p> <p>It is also possible to integrate a mkdocstrings identifier into a Markdown header:</p> <p>Example</p> mkdocs.yml<pre><code>plugins:\n- mkdocstrings:\n    enabled: !ENV [ENABLE_MKDOCSTRINGS, true]\n    custom_templates: templates\n    default_handler: python\n    handlers:\n      python:\n        options:\n          show_source: false\n</code></pre> <p>The handlers global configuration can then be overridden by local configurations:</p> docs/some_page.md<pre><code>::: my_package.my_module.MyClass\n    options:\n      show_source: true\n</code></pre> MarkdownHTML Result <pre><code>With a custom title:\n[`Object 1`][full.path.object1]\n\nWith the identifier as title:\n[full.path.object2][]\n</code></pre> <pre><code>&lt;p&gt;With a custom title:\n&lt;a href=\"https://example.com/page1#full.path.object1\"&gt;&lt;code&gt;Object 1&lt;/code&gt;&lt;/a&gt;&lt;p&gt;\n&lt;p&gt;With the identifier as title:\n&lt;a href=\"https://example.com/page2#full.path.object2\"&gt;full.path.object2&lt;/a&gt;&lt;/p&gt;\n</code></pre>"},{"location":"notes/markdown/started/#documentation-for-myclass","title":"Documentation for <code>MyClass</code>","text":"<p>Print print print!</p>"},{"location":"notes/markdown/started/#mkdocstrings.my_module.MyClass.method_a","title":"<code> method_a(self) </code>","text":"<p>Print A!</p>"},{"location":"notes/markdown/started/#mkdocstrings.my_module.MyClass.method_b","title":"<code> method_b(self) </code>","text":"<p>Print B!</p>"},{"location":"notes/python/","title":"Python Notes","text":"<ul> <li>Notes1</li> <li>Notes2</li> </ul>"},{"location":"notes/python/start/","title":"Python Started","text":"<ul> <li> <p>step 1</p> </li> <li> <p>step 2</p> </li> </ul>"},{"location":"notes/python/alembic/alembic/","title":"How to add Alembic migrations to an existing FastAPI + Ormar project","text":"<p>This is a summary information, ah ah ah ah</p>"},{"location":"notes/python/alembic/alembic/#alembic","title":"alembic\u5165\u95e8","text":"<p>\u5b98\u65b9\u6587\u6863: https://alembic.sqlalchemy.org/en/latest/index.html</p> <p>\u76f8\u5173\u9879\u76ee: https://github.com/python-gino/gino - \u6587\u6863</p> <p>\u7ffb\u8bd1\u7684alembic\u6587\u6863: https://hellowac.github.io/alembic_doc/</p> <p>alembic\u662fsqlalchemy\u7684\u4f5c\u8005\u5f00\u53d1\u7684\u3002\u7528\u6765\u505aOMR\u6a21\u578b\u4e0e\u6570\u636e\u5e93\u7684\u8fc1\u79fb\u4e0e\u6620\u5c04\u3002<code>alembic</code>\u4f7f\u7528\u65b9\u5f0f\u8ddf<code>git</code>\u6709\u70b9\u4e86\u7c7b\u4f3c\uff0c\u8868\u73b0\u5728\u4e24\u4e2a\u65b9\u9762\uff0c\u7b2c\u4e00\u4e2a\uff0c<code>alembic</code>\u7684\u6240\u6709\u547d\u4ee4\u90fd\u662f\u4ee5<code>alembic</code>\u5f00\u5934\uff1b\u7b2c\u4e8c\uff0c<code>alembic</code>\u7684\u8fc1\u79fb\u6587\u4ef6\u4e5f\u662f\u901a\u8fc7\u7248\u672c\u8fdb\u884c\u63a7\u5236\u7684\u3002\u9996\u5148\uff0c\u901a\u8fc7<code>pip install alembic</code>\u8fdb\u884c\u5b89\u88c5\u3002\u4ee5\u4e0b\u5c06\u89e3\u91ca<code>alembic</code>\u7684\u7528\u6cd5\uff1a</p>"},{"location":"notes/python/alembic/alembic/#alembic_1","title":"\u521d\u59cb\u5316alembic\u4ed3\u5e93","text":"<p>\u5728\u7ec8\u7aef\u4e2d\uff0c<code>cd</code> \u5230\u4f60\u7684\u9879\u76ee\u76ee\u5f55\u4e2d\uff0c\u7136\u540e\u6267\u884c\u547d\u4ee4<code>alembic init alembic</code>\uff0c\u521b\u5efa\u4e00\u4e2a\u540d\u53eb<code>alembic</code>\u7684\u4ed3\u5e93\u3002</p>"},{"location":"notes/python/alembic/alembic/#_1","title":"\u521b\u5efa\u6a21\u578b\u7c7b","text":"<p>\u521b\u5efa\u4e00\u4e2a<code>models.py</code>\u6a21\u5757\uff0c\u7136\u540e\u5728\u91cc\u9762\u5b9a\u4e49\u4f60\u7684\u6a21\u578b\u7c7b\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>from sqlalchemy import Column, Integer, String, create_engine, Text\nfrom sqlalchemy.orm import sessionmaker\nfrom sqlalchemy.ext.declarative import declarative_base\n\nBase = declarative_base()\n\n\nclass User(Base):\n    __tablename__ = \"user\"\n\n    id = Column(Integer, primary_key=True)\n    username = Column(String(20), nullable=False)\n    password = Column(String(100), nullable=False)\n\n\nclass Article(Base):\n    __tablename__ = \"article\"\n\n    id = Column(Integer, primary_key=True)\n    title = Column(String(100), nullable=False)\n    content = Column(Text, nullable=False)\n</code></pre>"},{"location":"notes/python/alembic/alembic/#_2","title":"\u8bbe\u7f6e\u6570\u636e\u5e93\u8fde\u63a5","text":"<p>\u5728alembic.ini\u4e2d\u8bbe\u7f6e\u6570\u636e\u5e93\u7684\u8fde\u63a5\uff0c<code>sqlalchemy.url = driver://user:pass@localhost/dbname</code>\uff0c\u6bd4\u5982\u4ee5mysql\u6570\u636e\u5e93\u4e3a\u4f8b\uff0c\u5219\u914d\u7f6e\u540e\u7684\u4ee3\u7801\u4e3a\uff1a</p> <pre><code>sqlalchemy.url = mysql+mysqldb://root:root@localhost/alembic_demo?charset=utf8\n</code></pre>"},{"location":"notes/python/alembic/alembic/#target_metadata","title":"\u8bbe\u7f6etarget_metadata","text":"<p>\u4e3a\u4e86\u4f7f\u7528\u6a21\u578b\u7c7b\u66f4\u65b0\u6570\u636e\u5e93\uff0c\u9700\u8981\u5728<code>env.py</code>\u6587\u4ef6\u4e2d\u8bbe\u7f6etarget_metadata\uff0c\u9ed8\u8ba4\u4e3a<code>target_metadata=None</code>\u3002\u4f7f\u7528<code>sys</code>\u6a21\u5757\u628a\u5f53\u524d\u9879\u76ee\u7684\u8def\u5f84\u5bfc\u5165\u5230<code>path</code>\u4e2d\uff1a</p> <pre><code>import os\nimport sys\n\nsys.path.append(os.path.dirname(os.path.abspath(__file__)) + \"/../\")\nfrom models import Base\n\n...  # \u7701\u7565\u4ee3\u7801\ntarget_metadata = Base.metadata  # \u8bbe\u7f6e\u521b\u5efa\u6a21\u578b\u7684\u5143\u7c7b\n...  # \u7701\u7565\u4ee3\u7801\n</code></pre>"},{"location":"notes/python/alembic/alembic/#_3","title":"\u81ea\u52a8\u751f\u6210\u8fc1\u79fb\u6587\u4ef6","text":"<p>\u4f7f\u7528<code>alembic revision --autogenerate -m \"message\"</code>\u5c06\u5f53\u524d\u6a21\u578b\u4e2d\u7684\u72b6\u6001\u751f\u6210\u8fc1\u79fb\u6587\u4ef6\u3002</p>"},{"location":"notes/python/alembic/alembic/#_4","title":"\u66f4\u65b0\u6570\u636e\u5e93","text":"<p>\u4f7f\u7528<code>alembic upgrade head</code>\u5c06\u521a\u521a\u751f\u6210\u7684\u8fc1\u79fb\u6587\u4ef6\uff0c\u771f\u6b63\u6620\u5c04\u5230\u6570\u636e\u5e93\u4e2d\u3002\u540c\u7406\uff0c\u5982\u679c\u8981\u964d\u7ea7\uff0c\u90a3\u4e48\u4f7f\u7528<code>alembic downgrade head</code>\u3002</p>"},{"location":"notes/python/alembic/alembic/#_5","title":"\u4fee\u6539\u4ee3\u7801\u540e","text":"<p>\u91cd\u590d4~5\u7684\u6b65\u9aa4\u3002</p>"},{"location":"notes/python/alembic/alembic/#_6","title":"\u547d\u4ee4\u548c\u53c2\u6570\u89e3\u91ca","text":"<ol> <li><code>init</code>\uff1a\u521b\u5efa\u4e00\u4e2aalembic\u4ed3\u5e93\u3002</li> <li><code>revision</code>\uff1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u7248\u672c\u6587\u4ef6\u3002</li> <li><code>\u2013autogenerate</code>\uff1a\u81ea\u52a8\u5c06\u5f53\u524d\u6a21\u578b\u7684\u4fee\u6539\uff0c\u751f\u6210\u8fc1\u79fb\u811a\u672c\u3002</li> <li><code>-m</code>\uff1a\u672c\u6b21\u8fc1\u79fb\u505a\u4e86\u54ea\u4e9b\u4fee\u6539\uff0c\u7528\u6237\u53ef\u4ee5\u6307\u5b9a\u8fd9\u4e2a\u53c2\u6570\uff0c\u65b9\u4fbf\u56de\u987e\u3002</li> <li><code>upgrade</code>\uff1a\u5c06\u6307\u5b9a\u7248\u672c\u7684\u8fc1\u79fb\u6587\u4ef6\u6620\u5c04\u5230\u6570\u636e\u5e93\u4e2d\uff0c\u4f1a\u6267\u884c\u7248\u672c\u6587\u4ef6\u4e2d\u7684upgrade\u51fd\u6570\u3002\u5982\u679c\u6709\u591a\u4e2a\u8fc1\u79fb\u811a\u672c\u6ca1\u6709\u88ab\u6620\u5c04\u5230\u6570\u636e\u5e93\u4e2d\uff0c\u90a3\u4e48\u4f1a\u6267\u884c\u591a\u4e2a\u8fc1\u79fb\u811a\u672c\u3002</li> <li><code>[head]</code>\uff1a\u4ee3\u8868\u6700\u65b0\u7684\u8fc1\u79fb\u811a\u672c\u7684\u7248\u672c\u53f7\u3002</li> <li><code>downgrade</code>\uff1a\u4f1a\u6267\u884c\u6307\u5b9a\u7248\u672c\u7684\u8fc1\u79fb\u6587\u4ef6\u4e2d\u7684downgrade\u51fd\u6570\u3002</li> <li><code>heads</code>\uff1a\u5c55\u793ahead\u6307\u5411\u7684\u811a\u672c\u6587\u4ef6\u7248\u672c\u53f7\u3002</li> <li><code>history</code>\uff1a\u5217\u51fa\u6240\u6709\u7684\u8fc1\u79fb\u7248\u672c\u53ca\u5176\u4fe1\u606f\u3002</li> <li><code>current</code>\uff1a\u5c55\u793a\u5f53\u524d\u6570\u636e\u5e93\u4e2d\u7684\u7248\u672c\u53f7\u3002</li> </ol> <p>\u53e6\u5916\uff0c\u5728\u4f60\u7b2c\u4e00\u6b21\u6267\u884c<code>upgrade</code>\u7684\u65f6\u5019\uff0c\u5c31\u4f1a\u5728\u6570\u636e\u5e93\u4e2d\u521b\u5efa\u4e00\u4e2a\u540d\u53eb<code>alembic_version</code>\u8868\uff0c\u8fd9\u4e2a\u8868\u53ea\u4f1a\u6709\u4e00\u6761\u6570\u636e\uff0c\u8bb0\u5f55\u5f53\u524d\u6570\u636e\u5e93\u6620\u5c04\u7684\u662f\u54ea\u4e2a\u7248\u672c\u7684\u8fc1\u79fb\u6587\u4ef6\u3002</p>"},{"location":"notes/python/alembic/alembic/#_7","title":"\u7ecf\u5178\u9519\u8bef","text":"\u9519\u8bef\u63cf\u8ff0 \u539f\u56e0 \u89e3\u51b3\u529e\u6cd5 <code>FAILED: Target database is not up to date.</code> \u4e3b\u8981\u662f<code>heads</code>\u548c<code>current</code>\u4e0d\u76f8\u540c\u3002<code>current</code>\u843d\u540e\u4e8eheads\u7684\u7248\u672c\u3002 \u5c06<code>current</code>\u79fb\u52a8\u5230<code>head</code>\u4e0a\u3002<code>alembic upgrade head</code> <code>FAILED: Can't locate revision identified by '77525ee61b5b'</code> \u6570\u636e\u5e93\u4e2d\u5b58\u7684\u7248\u672c\u53f7\u4e0d\u5728\u8fc1\u79fb\u811a\u672c\u6587\u4ef6\u4e2d \u5220\u9664\u6570\u636e\u5e93\u7684<code>alembic_version</code>\u8868\u4e2d\u7684\u6570\u636e\uff0c\u91cd\u65b0\u6267\u884c<code>alembic upgrade head</code>"},{"location":"notes/python/sqlalchemy/sqlalchemy-1.x/","title":"SQLAlchemy-1.x\u6559\u7a0b","text":"<p>\u539f\u6587\u53ef\u89c1: https://jiajunhuang.com/articles/2019_10_30-sqlalchemy.md.html</p> <p>SQLAlchemy\u662fPython\u4e2d\u5e38\u7528\u7684\u4e00\u4e2aORM\uff0cSQLAlchemy\u5206\u6210\u4e09\u90e8\u5206\uff1a</p> <ul> <li>ORM\uff0c\u5c31\u662f\u6211\u4eec\u7528\u7c7b\u6765\u8868\u793a\u6570\u636e\u5e93schema\u7684\u90a3\u90e8\u5206</li> <li>SQLAlchemy Core\uff0c\u5c31\u662f\u4e00\u4e9b\u57fa\u7840\u7684\u64cd\u4f5c\uff0c\u4f8b\u5982 update , insert \u7b49\u7b49\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u8fd9\u90e8\u5206\u6765\u8fdb\u884c\u64cd\u4f5c\uff0c\u4f46\u662f\u5b83\u4eec\u5199\u8d77\u6765\u6ca1\u6709ORM\u90a3\u4e48\u81ea\u7136</li> <li>DBAPI\uff0c\u8fd9\u90e8\u5206\u5c31\u662f\u6570\u636e\u5e93\u9a71\u52a8</li> </ul> <p>\u5b83\u4eec\u7684\u5173\u7cfb\u5982\u4e0b(\u56fe\u7247\u6765\u81ea\u5b98\u7f51)\uff1a</p> <p></p> <p>\u5148\u6765\u770b\u770b\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff1a</p> <pre><code>import contextlib\nfrom sqlalchemy.ext.declarative import declarative_base\nfrom sqlalchemy.orm import sessionmaker\nfrom sqlalchemy import (\n    create_engine,\n    Column,\n    Integer,\n    DateTime,\n    String,\n)\nfrom config import (\n    config,\n)  # config\u6a21\u5757\u91cc\u6709\u81ea\u5df1\u5199\u7684\u914d\u7f6e\uff0c\u6211\u4eec\u53ef\u4ee5\u6362\u6210\u522b\u7684\uff0c\u6ce8\u610f\u4e0b\u9762\u7528\u5230config\u7684\u5730\u65b9\u4e5f\u8981\u4e00\u8d77\u6362\n\nengine = create_engine(\n    config.SQLALCHEMY_DATABASE_URI,  # SQLAlchemy \u6570\u636e\u5e93\u8fde\u63a5\u4e32\uff0c\u683c\u5f0f\u89c1\u4e0b\u9762\n    echo=bool(config.SQLALCHEMY_ECHO),  # \u662f\u4e0d\u662f\u8981\u628a\u6240\u6267\u884c\u7684SQL\u6253\u5370\u51fa\u6765\uff0c\u4e00\u822c\u7528\u4e8e\u8c03\u8bd5\n    pool_size=int(config.SQLALCHEMY_POOL_SIZE),  # \u8fde\u63a5\u6c60\u5927\u5c0f\n    max_overflow=int(config.SQLALCHEMY_POOL_MAX_SIZE),  # \u8fde\u63a5\u6c60\u6700\u5927\u7684\u5927\u5c0f\n    pool_recycle=int(config.SQLALCHEMY_POOL_RECYCLE),  # \u591a\u4e45\u65f6\u95f4\u4e3b\u52a8\u56de\u6536\u8fde\u63a5\uff0c\u89c1\u4e0b\u6ce8\u91ca\n)\nSession = sessionmaker(bind=engine)\nBase = declarative_base(engine)\n\n\nclass BaseMixin:\n    \"\"\"model\u7684\u57fa\u7c7b,\u6240\u6709model\u90fd\u5fc5\u987b\u7ee7\u627f\"\"\"\n\n    id = Column(Integer, primary_key=True)\n    created_at = Column(DateTime, nullable=False, default=datetime.datetime.now)\n    updated_at = Column(\n        DateTime,\n        nullable=False,\n        default=datetime.datetime.now,\n        onupdate=datetime.datetime.now,\n        index=True,\n    )\n    deleted_at = Column(DateTime)  # \u53ef\u4ee5\u4e3a\u7a7a, \u5982\u679c\u975e\u7a7a, \u5219\u4e3a\u8f6f\u5220\n\n\n@contextlib.contextmanager\ndef get_session():\n    s = Session()\n    try:\n        yield s\n        s.commit()\n    except Exception as e:\n        s.rollback()\n        raise e\n    finally:\n        s.close()\n\n\nclass User(Base, BaseMixin):\n    __tablename__ = \"user\"\n\n    Name = Column(String(36), nullable=False)\n    Phone = Column(String(36), nullable=False, unique=True)\n</code></pre> <p>\u6ce8\u610f\u4e0a\u9762\u7684\u51e0\u70b9\uff1a</p> <ul> <li> <p>pool_recycle: \u8bbe\u7f6e\u4e3b\u52a8\u56de\u6536\u8fde\u63a5\u7684\u65f6\u957f\uff0c\u5982\u679c\u4e0d\u8bbe\u7f6e\uff0c\u90a3\u4e48\u53ef\u80fd\u4f1a\u9047\u5230\u6570\u636e\u5e93\u4e3b\u52a8\u65ad\u5f00\u8fde\u63a5\u7684\u95ee\u9898\uff0c\u4f8b\u5982<code>MySQL</code>\u901a\u5e38\u4f1a\u4e3a\u8fde\u63a5\u8bbe\u7f6e\u6700\u5927\u751f\u547d\u5468\u671f\u4e3a\u516b\u5c0f\u65f6\uff0c\u5982\u679c\u6ca1\u6709\u901a\u4fe1\uff0c\u90a3\u4e48\u5c31\u4f1a\u65ad\u5f00\u8fde\u63a5\u3002\u56e0\u6b64\u4e0d\u8bbe\u7f6e\u6b64\u9009\u9879\u53ef\u80fd\u5c31\u4f1a\u9047\u5230 <code>MySQL has gone away</code> \u7684\u62a5\u9519\u3002</p> </li> <li> <p>engine: <code>engine</code> \u662f <code>SQLAlchemy</code> \u4e2d\u4f4d\u4e8e\u6570\u636e\u5e93\u9a71\u52a8\u4e4b\u4e0a\u7684\u4e00\u4e2a\u62bd\u8c61\u6982\u5ff5\uff0c\u5b83\u9002\u914d\u4e86\u5404\u79cd\u6570\u636e\u5e93\u9a71\u52a8\uff0c\u63d0\u4f9b\u4e86\u8fde\u63a5\u6c60\u7b49\u529f\u80fd\u3002\u5176\u7528\u6cd5\u5c31\u662f \u5982\u4e0a\u9762\u4f8b\u5b50\u4e2d\uff0c<code>engine = create_engine(&lt;\u6570\u636e\u5e93\u8fde\u63a5\u4e32&gt;)</code>\uff0c\u6570\u636e\u5e93\u8fde\u63a5\u4e32\u7684\u683c\u5f0f\u662f <code>dialect+driver://username:password@host:port/database?\u53c2\u6570</code> \u8fd9\u6837\u7684\uff0cdialect \u53ef\u4ee5\u662f <code>mysql</code>, <code>postgresql</code>, <code>oracle</code>, <code>mssql</code>, <code>sqlite</code>\uff0c\u540e\u9762\u7684 driver \u662f\u9a71\u52a8\uff0c\u6bd4\u5982<code>MySQL</code>\u7684\u9a71\u52a8<code>pymysql</code>\uff0c \u5982\u679c\u4e0d\u586b\u5199\uff0c\u5c31\u4f7f\u7528\u9ed8\u8ba4\u9a71\u52a8\u3002\u518d\u5f80\u540e\u5c31\u662f<code>\u7528\u6237\u540d</code>\u3001<code>\u5bc6\u7801</code>\u3001<code>\u5730\u5740</code>\u3001<code>\u7aef\u53e3</code>\u3001<code>\u6570\u636e\u5e93</code>\u3001<code>\u8fde\u63a5\u53c2\u6570</code>\u4e86\uff0c\u6765\u770b\u51e0\u4e2a\u4f8b\u5b50\uff1a</p> <ul> <li>MySQL: <code>engine = create_engine('mysql+pymysql://scott:tiger@localhost/foo?charset=utf8mb4')</code></li> <li>PostgreSQL: <code>engine = create_engine('postgresql+psycopg2://scott:tiger@localhost/mydatabase')</code></li> <li>Oracle: <code>engine = create_engine('oracle+cx_oracle://scott:tiger@tnsname')</code></li> <li>MS SQL: <code>engine = create_engine('mssql+pymssql://scott:tiger@hostname:port/dbname')</code></li> <li>SQLite: <code>engine = create_engine('sqlite:////absolute/path/to/foo.db')</code></li> <li>\u8be6\u89c1\uff1ahttps://docs.sqlalchemy.org/en/13/core/engines.html</li> </ul> </li> <li> <p>Session: <code>Session</code>\u7684\u610f\u601d\u5c31\u662f\u4f1a\u8bdd\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u662f\u4e00\u4e2a\u903b\u8f91\u7ec4\u7ec7\u7684\u6982\u5ff5\uff0c\u56e0\u6b64\uff0c\u8fd9\u9700\u8981\u9760\u4f60\u7684\u4e1a\u52a1\u903b\u8f91\u6765\u5212\u5206\u54ea\u4e9b\u64cd\u4f5c\u4f7f\u7528\u540c\u4e00\u4e2a<code>Session</code>\uff0c \u54ea\u4e9b\u64cd\u4f5c\u53c8\u5212\u5206\u4e3a\u4e0d\u540c\u7684\u4e1a\u52a1\u64cd\u4f5c\uff0c\u8be6\u89c1 \u8fd9\u91cc\u3002 \u4e3e\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u4ee5web\u5e94\u7528\u4e3a\u4f8b\uff0c\u4e00\u4e2a\u8bf7\u6c42\u91cc\u5171\u7528\u4e00\u4e2a<code>Session</code>\u5c31\u662f\u4e00\u4e2a\u597d\u7684\u4f8b\u5b50\uff0c\u4e00\u4e2a\u5f02\u6b65\u4efb\u52a1\u6267\u884c\u8fc7\u7a0b\u4e2d\u4f7f\u7528\u4e00\u4e2a<code>Session</code>\u4e5f\u662f\u4e00\u4e2a\u4f8b\u5b50\u3002 \u4f46\u662f\u6ce8\u610f\uff0c\u4e0d\u80fd\u76f4\u63a5\u4f7f\u7528<code>Session</code>\uff0c\u800c\u662f\u4f7f\u7528Session\u7684\u5b9e\u4f8b\uff0c\u501f\u52a9\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u8fd9\u6837\u5199\uff1a</p> <pre><code>with get_session() as s:\n    print(s.query(User).first())\n</code></pre> </li> <li> <p>Base: <code>Base</code>\u662f<code>ORM</code>\u4e2d\u7684\u4e00\u4e2a\u57fa\u7c7b\uff0c\u901a\u8fc7\u96c6\u6210<code>Base</code>\uff0c\u6211\u4eec\u624d\u80fd\u65b9\u4fbf\u7684\u4f7f\u7528\u4e00\u4e9b\u57fa\u672c\u7684\u67e5\u8be2\uff0c\u4f8b\u5982 <code>s.query(User).filter_by(User.name=\"nick\").first()</code>\u3002</p> </li> <li> <p>BaseMixin: <code>BaseMixin</code>\u662f\u5b9a\u4e49\u7684\u4e00\u4e9b\u901a\u7528\u7684\u8868\u7ed3\u6784\uff0c\u901a\u8fc7<code>Mixin</code>\u7684\u65b9\u5f0f\u96c6\u6210\u5230\u7c7b\u91cc\uff0c\u6bd4\u5982\u4e0a\u9762\u7684\u5b9a\u4e49\uff0c\u6211\u4eec\u5e38\u89c1\u7684\u8868\u7ed3\u6784\u91cc\uff0c\u90fd\u4f1a\u6709 ID\u3001\u521b\u5efa\u65f6\u95f4\u3001\u66f4\u65b0\u65f6\u95f4\uff0c\u8f6f\u5220\u9664\u6807\u5fd7 \u7b49\u7b49\uff0c\u6211\u4eec\u628a\u5b83\u4f5c\u4e3a\u4e00\u4e2a\u72ec\u7acb\u7684\u7c7b\uff0c\u8fd9\u6837\u901a\u8fc7\u7ee7\u627f\u5373\u53ef\u83b7\u5f97\u76f8\u5173\u8868\u5c5e\u6027\uff0c\u7701\u5f97\u91cd\u590d\u5199\u591a\u6b21\u3002</p> </li> </ul>"},{"location":"notes/python/sqlalchemy/sqlalchemy-1.x/#_1","title":"\u8868\u7684\u8bbe\u8ba1","text":"<p>\u8868\u7684\u8bbe\u8ba1\u901a\u5e38\u5c31\u5982 <code>User</code> \u8868\u4e00\u6837\uff1a</p> <pre><code>class User(Base, BaseMixin):\n    __tablename__ = \"user\"\n\n    Name = Column(String(36), nullable=False)\n    Phone = Column(String(36), nullable=False, unique=True)\n</code></pre> <p>\u9996\u5148\u4f7f\u7528 __tablename__ \u81ea\u5b9a\u4e49\u8868\u540d\uff0c\u63a5\u7740\u5199\u5404\u4e2a\u8868\u4e2d\u7684\u5c5e\u6027\uff0c\u4e5f\u5c31\u662f\u5bf9\u5e94\u5728\u6570\u636e\u5e93\u8868\u4e2d\u7684\u5217(<code>column</code>)\uff0c\u5e38\u89c1\u7684\u7c7b\u578b\u6709\uff1a</p> <pre><code>&gt;$ egrep '^class ' ~/.pyenv/versions/3.6.0/lib/python3.6/site-packages/sqlalchemy/sql/sqltypes.py\nclass _LookupExpressionAdapter(object):\nclass Concatenable(object):\nclass Indexable(object):\nclass String(Concatenable, TypeEngine):\nclass Text(String):\nclass Unicode(String):\nclass UnicodeText(Text):\nclass Integer(_LookupExpressionAdapter, TypeEngine):\nclass SmallInteger(Integer):\nclass BigInteger(Integer):\nclass Numeric(_LookupExpressionAdapter, TypeEngine):\nclass Float(Numeric):\nclass DateTime(_LookupExpressionAdapter, TypeEngine):\nclass Date(_LookupExpressionAdapter, TypeEngine):\nclass Time(_LookupExpressionAdapter, TypeEngine):\nclass _Binary(TypeEngine):\nclass LargeBinary(_Binary):\nclass Binary(LargeBinary):\nclass SchemaType(SchemaEventTarget):\nclass Enum(Emulated, String, SchemaType):\nclass PickleType(TypeDecorator):\nclass Boolean(Emulated, TypeEngine, SchemaType):\nclass _AbstractInterval(_LookupExpressionAdapter, TypeEngine):\nclass Interval(Emulated, _AbstractInterval, TypeDecorator):\nclass JSON(Indexable, TypeEngine):\nclass ARRAY(SchemaEventTarget, Indexable, Concatenable, TypeEngine):\nclass REAL(Float):\nclass FLOAT(Float):\nclass NUMERIC(Numeric):\nclass DECIMAL(Numeric):\nclass INTEGER(Integer):\nclass SMALLINT(SmallInteger):\nclass BIGINT(BigInteger):\nclass TIMESTAMP(DateTime):\nclass DATETIME(DateTime):\nclass DATE(Date):\nclass TIME(Time):\nclass TEXT(Text):\nclass CLOB(Text):\nclass VARCHAR(String):\nclass NVARCHAR(Unicode):\nclass CHAR(String):\nclass NCHAR(Unicode):\nclass BLOB(LargeBinary):\nclass BINARY(_Binary):\nclass VARBINARY(_Binary):\nclass BOOLEAN(Boolean):\nclass NullType(TypeEngine):\nclass MatchType(Boolean):\n</code></pre>"},{"location":"notes/python/sqlalchemy/sqlalchemy-1.x/#_2","title":"\u5e38\u89c1\u64cd\u4f5c","text":"<p>\u6211\u4eec\u6765\u770b\u770b\u4f7f\u7528SQLAlchemy\u5b8c\u6210\u5e38\u89c1\u7684\u64cd\u4f5c\uff0c\u4f8b\u5982\u589e\u5220\u67e5\u6539\uff1a</p>"},{"location":"notes/python/sqlalchemy/sqlalchemy-1.x/#_3","title":"\u5e38\u89c1\u67e5\u8be2\u64cd\u4f5c","text":"<ul> <li> <p><code>SELECT * FROM user</code> \u5e94\u8be5\u8fd9\u6837\u5199\uff1a</p> <pre><code>with get_session() as s:\n    print(s.query(User).all())\n</code></pre> </li> <li> <p><code>SELECT * FROM user WHERE name='nick'</code> \u5e94\u8be5\u8fd9\u6837\u5199\uff1a</p> <pre><code>with get_session() as s:\n    print(s.query(User).filter_by(User.name='nick').all())\n    print(s.query(User).filter(User.name == 'nick').all())  # \u8fd9\u6837\u5199\u662f\u7b49\u540c\u6548\u679c\u7684\n</code></pre> </li> <li> <p><code>SELECT * FROM user WHERE name='nick' LIMIT 1</code> \u5e94\u8be5\u8fd9\u6837\u5199\uff1a</p> <pre><code>with get_session() as s:\n    print(s.query(User).filter_by(User.name='nick').first())\n</code></pre> <p>\u5982\u679c\u9700\u8981\u52a0\u5224\u5b9a\uff0c\u4f8b\u5982\u786e\u4fdd\u53ea\u6709\u4e00\u6761\u6570\u636e\uff0c\u90a3\u5c31\u628a <code>first()</code> \u66ff\u6362\u4e3a <code>one()</code>\uff0c\u5982\u679c\u786e\u4fdd\u4e00\u884c\u6216\u8005\u6ca1\u6709\uff0c\u90a3\u5c31\u5199 <code>one_or_none()</code>\u3002</p> </li> <li> <p><code>SELECT * FROM user ORDER BY id DESC LIMIT 1</code> \u5e94\u8be5\u8fd9\u6837\u5199\uff1a</p> <pre><code>with get_session() as s:\n    print(s.query(User).order_by(User.id.desc()).first())\n</code></pre> </li> <li> <p><code>SELECT * FROM user ORDER BY id DESC LIMIT 1 OFFSET 20</code> \u5e94\u8be5\u8fd9\u6837\u5199\uff1a</p> <pre><code>with get_session() as s:\n    print(s.query(User).order_by(User.id.desc()).offset(20).first())\n</code></pre> </li> </ul>"},{"location":"notes/python/sqlalchemy/sqlalchemy-1.x/#_4","title":"\u5e38\u89c1\u5220\u9664\u64cd\u4f5c","text":"<ul> <li> <p><code>DELETE FROM user</code> \u5e94\u8be5\u8fd9\u6837\u5199\uff1a</p> <pre><code>with get_session() as s:\n    s.query(User).delete()\n</code></pre> </li> <li> <p><code>DELETE FROM user WHERE name='nick'</code> \u5e94\u8be5\u8fd9\u6837\u5199\uff1a</p> <pre><code>with get_session() as s:\n    s.query(User).filter_by(User.name='nick').delete()\n</code></pre> </li> <li> <p><code>DELETE FROM user WHERE name='nick' LIMIT 1</code> \u5e94\u8be5\u8fd9\u6837\u5199\uff1a</p> <pre><code>with get_session() as s:\n    s.query(User).filter_by(User.name='nick').limit(1).delete()\n</code></pre> </li> </ul>"},{"location":"notes/python/sqlalchemy/sqlalchemy-1.x/#_5","title":"\u5e38\u89c1\u66f4\u65b0\u64cd\u4f5c","text":"<ul> <li> <p><code>UPDATE user SET name='nick'</code> \u5e94\u8be5\u8fd9\u6837\u5199\uff1a</p> <pre><code>with get_session() as s:\n    s.query(User).update({\"name\": \"nick\"})\n</code></pre> </li> <li> <p><code>UPDATE user SET name='nick' WHERE id=1</code> \u5e94\u8be5\u8fd9\u6837\u5199\uff1a</p> <pre><code>with get_session() as s:\n    s.query(User).filter_by(User.id=1).update({'name': 'nick'})\n</code></pre> <p>\u4e5f\u53ef\u4ee5\u901a\u8fc7\u66f4\u6539\u5b9e\u4f8b\u7684\u5c5e\u6027\uff0c\u7136\u540e\u63d0\u4ea4\uff1a</p> <pre><code>with get_session() as s:\n    user = s.query(User).filter_by(User.id=1).one()\n    user.name = 'nick'\n    s.commit()\n</code></pre> </li> </ul>"},{"location":"notes/python/sqlalchemy/sqlalchemy-1.x/#_6","title":"\u5e38\u89c1\u63d2\u5165\u64cd\u4f5c","text":"<p>\u8fd9\u4e2a\u5c31\u7b80\u5355\u4e86\uff0c\u5b9e\u4f8b\u5316\u5bf9\u8c61\uff0c\u7136\u540e <code>session.add</code>\uff0c\u6700\u540e\u63d0\u4ea4\uff1a</p> <pre><code>with get_session() as s:\n    user = User()\n    s.add(user)\n    s.commit()\n</code></pre>"},{"location":"notes/python/sqlalchemy/sqlalchemy-1.x/#_7","title":"\u5e38\u89c1\u8fde\u8868\u67e5\u8be2","text":"<p><code>SQLAlchemy</code> \u4e2d\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 join\u8bed\u53e5 \uff1a</p> <pre><code>with get_session() as s:\n    s.query(Customer).join(Invoice).filter(Invoice.amount == 8500)\n</code></pre> <p>\u53ef\u4ee5\u662f\u8fd9\u4e48\u51e0\u79cd\u5199\u6cd5\uff1a</p> <pre><code>query.join(Address, User.id == Address.user_id)  # explicit condition\nquery.join(User.addresses)  # specify relationship from left to right\nquery.join(Address, User.addresses)  # same, with explicit target\nquery.join(\"addresses\")  # same, using a string\n</code></pre>"},{"location":"notes/python/sqlalchemy/sqlalchemy-1.x/#migration","title":"\u6570\u636e\u5e93migration","text":"<p>\u6211\u4eec\u4f7f\u7528alembic\u6765\u505a\u6570\u636e\u5e93migration\uff0c\u9996\u5148\u5b89\u88c5\uff1a</p> <pre><code>&gt;$ pip install alembic\n&gt;$ alembic init alembic  # \u6b64\u5904 alembic init \u540e\u63a5\u7684\u662f\u4fdd\u5b58migration\u7684\u6587\u4ef6\u5939\u540d\u79f0\n</code></pre> <p>\u7136\u540e\u6211\u4eec\u8981\u4fee\u6539 <code>alembic/env.py</code> (\u5047\u8bbe\u4f60\u8bbe\u7f6e\u7684\u4fdd\u5b58<code>migration</code>\u7684\u6587\u4ef6\u5939\u540d\u79f0\u5c31\u662f <code>alembic</code>)\uff0c\u5c06\u5bf9\u5e94\u90e8\u5206\u4fee\u6539\u6210\u5982\u4e0b\uff1a</p> <pre><code>config.set_main_option(\"sqlalchemy.url\", config.SQLALCHEMY_DATABASE_URI)\ntarget_metadata = Base.metadata  # \u4ece\u4efb\u610f\u4e00\u4e2a\u6211\u4eec\u7684model\u53ef\u4ee5\u62ff\u5230\u603b\u7684Base\nengine = target_metadata.bind\n</code></pre> <p>\u56e0\u4e3a<code>SQLAlchemy</code>\u4f1a\u628a\u8868\u7684\u4fe1\u606f\u5b58\u50a8\u5728 metadata \u91cc\uff0c\u800c\u6211\u4eec\u90fd\u7ee7\u627f\u4e86 Base \uff0c\u56e0\u6b64\u53ef\u4ee5 \u901a\u8fc7 <code>Base.metadata</code> \u6765\u62ff\u5230\u6240\u6709\u8868\u7684\u4fe1\u606f\uff0c\u8fd9\u6837\u5b50 alembic \u624d\u80fd\u591f\u62ff\u5230\u8868\u7684\u7ed3\u6784\uff0c\u7136\u540e\u548c\u6570\u636e\u5e93\u8fdb\u884c\u5bf9\u6bd4\uff0c\u751f\u6210 migration \u811a\u672c\uff1a</p> <pre><code>&gt;$ alembic revision --autogenerate -m '\u672c\u6b21migration\u7684\u4fe1\u606f\uff0c\u76f8\u5f53\u4e8egit\u63d0\u4ea4\u65f6\u7684\u8bc4\u8bba'\n</code></pre> <p>\u8fd9\u4e00\u7bc7\u4e2d\u6211\u4eec\u770b\u4e86\u5982\u4f55\u4f7f\u7528<code>SQLAlchemy</code>\u6765\u8fdb\u884c\u5e38\u89c1\u7684\u64cd\u4f5c\uff0c\u6211\u4eec\u9996\u5148\u4ece\u5982\u4f55\u5b9a\u4e49\u8868\u5f00\u59cb\uff0c\u63a5\u7740\u6211\u4eec\u6ce8\u610f\u770b\u4e86\u5e38\u89c1\u7684SQL\u64cd\u4f5c\u5bf9\u5e94\u7684 <code>SQLAlchemy</code>\u64cd\u4f5c\u662f\u600e\u6837\u7684\uff0c\u6700\u540e\u6211\u4eec\u770b\u4e86\u4ee5\u4e0b<code>alembic</code>\u5e94\u8be5\u600e\u4e48\u914d\u7f6e\u624d\u80fd\u81ea\u52a8\u751f\u6210<code>migration</code>\u811a\u672c\u3002</p> <p>\u53c2\u8003\u8d44\u6599\uff1a</p> <ul> <li>\u5b98\u65b9\u6587\u6863</li> </ul>"},{"location":"projects/","title":"Projects","text":"<ul> <li>Project1</li> <li>Project2</li> </ul>"},{"location":"projects/demo/getting-started/","title":"Getting started","text":""},{"location":"projects/demo/setup/","title":"Setup","text":""}]}